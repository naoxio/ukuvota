---
import { Translator } from '@utils/i18n.js';

const translator = new Translator(Astro.currentLocale || 'en'); 
await translator.init();

interface Props {
  id: string;
  index: number;
  date: Date;
  min: Date;
  nojs?: Boolean;
}

const { nojs, id, index, date, min } = Astro.props;

const toDateTimeLocal = (date: Date) => {
  const offset = date.getTimezoneOffset();
  const adjustedHours = (date.getUTCHours() - offset / 60 + 24) % 24; 
  const paddedHours = String(Math.floor(adjustedHours)).padStart(2, '0');
  const paddedMinutes = String(date.getUTCMinutes()).padStart(2, '0');
  return `${date.toISOString().slice(0, 10)}T${paddedHours}:${paddedMinutes}:00`;
};
---

{ nojs ? (
  <form id={id} action="/api/process-store" method="POST" class="flex justify-between items-center flex-wrap">
    <input type="hidden" name="nojsSubmission" value="true" />

    <h4>{ index == 0 ? translator.t(`phases.startAt`) : translator.t(`phases.endsAt`)}</h4>
    <input type="hidden" name="step" value="2" />
    <input type="datetime-local" min={toDateTimeLocal(min)} name={id} value={toDateTimeLocal(date)}/>
    <button class="btn btn-secondary" type="submit">{translator.t('setup.setDate')}</button>
  </form>
): (
  <div id={id} class="flex justify-between items-center flex-wrap">
    <h4>{ index == 0 ? translator.t(`phases.startAt`) : translator.t(`phases.endsAt`)}</h4>

    <input type="datetime-local" min={toDateTimeLocal(min)} name={id} value={toDateTimeLocal(date)} />
  </div>
)}
