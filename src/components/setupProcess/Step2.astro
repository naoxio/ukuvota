---
import { t } from 'astro-i18n';
import AddProposals from "@components/process/AddProposals.astro";
import EditProposalList from "@components/process/EditProposalList.astro";
import TimeSelector from "@components/datetime/TimeSelector.astro";
import { adjustDates } from '@utils/dateAdjustments';

type Props = {
  phase: string;
  proposalStartDate: string;
  proposalEndDate: string;
  votingStartDate: string;
  votingEndDate: string;
}
const { phase, proposalStartDate, proposalEndDate, votingStartDate, votingEndDate } = Astro.props;

const {
  pStart,
  pEnd,
  vStart,
  vEnd
} = adjustDates(phase, proposalStartDate, proposalEndDate, votingStartDate, votingEndDate);

---
<div>
  { phase === "full" ? (
    <div>
      <h2 class="flex justify-center mt-4">{() => t('process.timeLeftHeading')}</h2>
      <br/>
      <TimeSelector phase="proposal" startDate={pStart} endDate={pEnd} startMinDate={new Date()}/>  
      <TimeSelector phase="voting" startDate={vStart} endDate={vEnd} startMinDate={pEnd}/>  
    </div>
  ) : phase === "voting" ? ( 
    <div>
      <h2>{() => t('setup.selectTimeForVoting')}</h2>
      <br/>
      <TimeSelector phase="voting" startDate={vStart} endDate={vEnd} startMinDate={new Date()}/>
      <br/>
      <h2>{ () => t('setup.proposals') }</h2>    
      <EditProposalList />
      <br/>
      <AddProposals />
    </div>
  ) : null }
</div>