---
import { Translator } from '@utils/i18n.js';
const translator = new Translator(Astro.currentLocale || 'en'); import CreateProcessLayout from '@layouts/CreateProcessLayout.astro';
import { parseProcessCookie } from '@utils/parseProcessCookie'
import type { ProcessCookie } from '@utils/parseProcessCookie'
import Step1 from '@components/setupProcess/Step1.astro';
import Step2 from '@components/setupProcess/Step2.astro';

import { Icon } from 'astro-icon'
import IProposal from '@interfaces/IProposal';

const rawCookieValue = Astro.cookies.get('process')?.value;
const processCookie: ProcessCookie = parseProcessCookie(rawCookieValue);
const {
  create = 'false',
  phase = '',
  weighting = '',
  title = '',
  nojsdescription = '',
  quillopsdescription = '',
  startProposalDate = 0,
  endProposalDate = 0,
  startVotingDate = 0,
  endVotingDate = 0,
  step = '1',
  proposals = []
} = processCookie as ProcessCookie;
const currentStep = Number(step);

let modifiedCreate = JSON.parse(create);

if (currentStep === 1 && !phase && !weighting && !title && !nojsdescription && !quillopsdescription) {
    modifiedCreate = false;
}

const formatDate = (timestamp: number): string => {
  let date = new Date(timestamp)

  const options: Intl.DateTimeFormatOptions = {
    year: 'numeric',
    month: 'long',
    day: 'numeric',
    hour: 'numeric',
    minute: 'numeric',
  };

  return date.toLocaleDateString('en-US', options);
}

---

<CreateProcessLayout step={currentStep}>
  {modifiedCreate ? (
    <input type="checkbox" id="existingProcessModal" class="modal-toggle" checked/>
    <label for="existingProcessModal" class="modal">
      <label class="modal-box">
        <label for="existingProcessModal" class="btn btn-sm btn-circle absolute right-2 top-2">
          <Icon width="22" name="close"/>
        </label>
        <h3>{translator.t('setup.continueEditing')}</h3>
        <p>{translator.t('setup.existingProcessPrompt')}</p>
        <div class="process-details">
          { title && <p><strong>{translator.t('process.topic')}:</strong> {title}</p> }
          { nojsdescription && <p><strong>{translator.t('process.description')}:</strong> {nojsdescription}</p> }
          { weighting && <p><strong>{translator.t('process.weighting')}:</strong> {weighting}</p> }
        </div>

        <div class="flex justify-center">
          <form action="/api/start-new-process" method="post">
            <button type="submit" class="btn m-2">{translator.t('startNew')}</button>
          </form>
          <label for="existingProcessModal" class="btn m-2">{translator.t('buttons.continue')}</label>
        </div>
      </label>
    </label>
  ) : null}

  { currentStep === 1 ? (
    <Step1 title={title} quillopsdescription={quillopsdescription} weighting={weighting} nojsdescription={nojsdescription}/>
  ) : currentStep === 2 ? (
    <Step2 phase={phase} proposalStartDate={startProposalDate} proposalEndDate={endProposalDate} votingStartDate={startVotingDate} votingEndDate={endVotingDate} proposals={proposals} />
  ) : currentStep === 3 ? (
    <div class="process-details">
      {title ? (
        <h2>{translator.t('process.topic')}</h2> 
        <p>{title}</p> 
      ) : null}
      {nojsdescription ? (
        <h3>{translator.t('process.description')}:</h3>
        <p>{nojsdescription}</p>
      ) : null}
      {startProposalDate && endProposalDate ? (
        <h2>{ translator.t(`phases.proposal.title`) }</h2>
        <p><h3>{translator.t('phases.startAt')}:</h3> {formatDate(startProposalDate)}</p>
        <p><h3>{translator.t('phases.endsAt')}:</h3> {formatDate(endProposalDate)}</p>
      ) : null }
      <h2>{ translator.t(`phases.voting.title`) }</h2>
      {startVotingDate ? <p><h3>{translator.t('phases.startAt')}:</h3> {formatDate(startVotingDate)}</p> : null}
      {endVotingDate ? <p><h3>{translator.t('phases.endsAt')}:</h3> {formatDate(endVotingDate)}</p> : null}

      {proposals.length > 0 ? (
        <>
          <br/><br/>
          <h2>{translator.t('process.proposals')}</h2>
          { proposals.map((proposal: IProposal) => (
          <ul class="flex flex-wrap">
            <li>
              <b>{proposal.title || 'Untitled Proposal'}</b>
              <p>{proposal.description}</p>
            </li>
          </ul>
          ))}
        </>
      ) : null}
    </div>
    <div class="flex justify-around mt-5">
      <form action="/api/update-step" method="post">
        <input type="hidden" name="step" value="2"/>

        <button type="submit" class="btn m-2">{translator.t('buttons.back')}</button>
      </form>
      <button class="btn btn-primary m-2">{translator.t('buttons.start')}</button>
    </div>
  ) : null }

</CreateProcessLayout>
